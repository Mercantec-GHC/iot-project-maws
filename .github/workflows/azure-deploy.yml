name: Deploy TamaTown Central to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [closed]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore H3-Projekt.sln
    
    - name: Build solution
      run: dotnet build H3-Projekt.sln --configuration Release --no-restore
    
    - name: Run tests (if any)
      run: dotnet test H3-Projekt.sln --no-restore --verbosity normal --configuration Release
      continue-on-error: true
    
    # Debug: Check project structure
    - name: List project structure
      run: |
        echo "Root directory contents:"
        ls -la ${{ github.workspace }}
        echo "API directory contents:"
        ls -la ${{ github.workspace }}/API/
        echo "Blazor directory contents:"
        ls -la ${{ github.workspace }}/Blazor/
    
    # Build and publish API with verbose output to an absolute path
    - name: Publish TamaTown API
      run: |
        echo "Publishing API project to ${{ github.workspace }}/api_output_package"
        dotnet publish API/API.csproj --configuration Release --no-build --output ${{ github.workspace }}/api_output_package --verbosity normal
        echo "Publish command completed with exit code: $?"

    
    # Verify API publish output location
    - name: Verify API publish output
      run: |
        echo "Checking for API output at ${{ github.workspace }}/api_output_package:"
        ls -la ${{ github.workspace }}/api_output_package
        if [ -d "${{ github.workspace }}/api_output_package" ]; then
          echo "Found API output package directory!"
        else
          echo "API output package directory NOT found at ${{ github.workspace }}/api_output_package"
        fi
    
    # Build and publish Blazor with verbose output to an absolute path
    - name: Publish TamaTown Blazor App
      run: |
        echo "Publishing Blazor project to ${{ github.workspace }}/blazor_output_package"
        dotnet publish Blazor/Blazor.csproj --configuration Release --output ${{ github.workspace }}/blazor_output_package --verbosity normal
        echo "Publish command completed with exit code: $?"

    # Verify Blazor publish output location
    - name: Verify Blazor publish output
      run: |
        echo "Checking for Blazor output at ${{ github.workspace }}/blazor_output_package:"
        ls -la ${{ github.workspace }}/blazor_output_package
        if [ -d "${{ github.workspace }}/blazor_output_package" ]; then
          echo "Found Blazor output package directory!"
        else
          echo "Blazor output package directory NOT found at ${{ github.workspace }}/blazor_output_package"
        fi
    
    # Deploy API to Azure App Service (only if publish succeeded)
    - name: Deploy API to Azure App Service
      if: success()
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'TamaTownCentralAPI'
        publish-profile: ${{ secrets.AZURE_API_PUBLISH_PROFILE }}
        package: ${{ github.workspace }}/api_output_package # Use the new absolute path
        slot-name: production
    
    # Deploy Blazor to Azure App Service (only if publish succeeded)
    - name: Deploy Blazor to Azure App Service
      if: success()
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'TamaTownCentral'
        publish-profile: ${{ secrets.AZURE_BLAZOR_PUBLISH_PROFILE }}
        package: ${{ github.workspace }}/blazor_output_package # Use the new absolute path
